hist(histData2)
histData2 <- c(mtcars$mpg, log(disp))
hist(histData2)
histData3 <- c(mtcars$mpg, sqrt(disp))
hist(histData3)
histData3 <- c(sqrt(mtcars$mpg), sqrt(disp))
hist(histData3)
histData3 <- c(sqrt(mtcars$mpg), disp)
hist(histData3)
histData3 <- c(mtcars$mpg, sqrt(disp))
hist(histData3)
model3 <- lm(mtcars$mpg~sqrt(disp))
summary(model3)
plot(model3)
shapiro.test(model3$residuals)
ggplot(data=mtcars) + geom_point(mapping = aes(disp, sqrt(mpg)))
ggplot(data=mtcars) + geom_point(mapping = aes(sqrt(disp), mpg))
ggplot(data=mtcars) + geom_point(mapping = aes(sqrt(disp), mpg)) + geom_abline((aes(intercept=38.8324, slope = -1.2809)))
x = seq(0,1,.1)
error = rnorm(length(x),0,.05)
true_y = x*(x-1)
obs_y = true_y + error
plot(x,obs_y, col = 'red')
lines(x,true_y,type = 'l')
model = lm(obs_y~poly(x,2))
summary(model)
x = seq(0,1,.1)
error = rnorm(length(x),0,.05)
true_y = x*(x-1)
obs_y = true_y + error
plot(x,obs_y, col = 'red')
lines(x,true_y,type = 'l')
model = lm(obs_y~poly(x,2))
summary(model)
plot(model)
true_y = x*(x-1)
obs_y = true_y + error
plot(x,obs_y, col = 'red')
lines(x,true_y,type = 'l')
model = lm(obs_y~poly(x,2))
summary(model)
setwd("~/R_scripts/Regression")
mtcars
attach(mtcars)
?mtcars
pairs(mtcars)
cor(mtcars)
hist(wt)
hist(log(wt))
# single variable model
cor(wt,mpg)
(wt,mpg)
# single variable model
cor(wt,mpg)
plot(wt,mpg)
cor(log(wt),mpg)
plot(log(wt),mpg)
pairs(wt, mpg)
pair(wt, mpg)
pairs(wt, mpg)
plot(wt,mpg)
hist(wt)
hist(log(wt))
model1 = lm(mpg~wt)
summary(model1)
library(stargazer)
stargazer(model1,type = 'html', out='single var model')
model2 = lm(mpg~log(wt))
summmary(model2)
summary(model2)
stargazer(model1,type = 'html', out='single var model transform')
stargazer(model2,type = 'html', out='single var model transform')
# checking the assumptions of regression for the models
shapiro.test(model1$residuals)
shapiro.test(model2$residuals)
# checking the assumptions of regression for the models
plot(model1)
plot(model2)
model2 = lm(mpg~I(wt^-1))
summary(model2)
plot(model2)
shapiro.test(model2$residuals)
hist(I(wt^-1))
hist(I(wt^-2))
hist(I(wt^.5))
hist(I(wt^-.5))
hist(I(wt^.5))
model2 = lm(mpg~I(wt^.5))
summary(model2)
plot(model2)
shapiro.test(model2$residuals)
model2 = lm(mpg~I(log(wt))
stargazer(model2,type = 'html', out='single var model transform')
model2 = lm(mpg~log(wt))
summary(model2)
# checking the assumptions of regression for the models
plot(model1)
summary(model1)
shapiro.test(model1$residuals)
model2 = lm(mpg~I(wt^2)
stargazer(model2,type = 'html', out='single var model transform')
model2 = lm(mpg~I(wt^2))
summary(model2)
plot(model2)
shapiro.test(model2$residuals)
model2 = lm(mpg~I(wt^3))
summary(model2)
plot(model2)
model2 = lm(mpg~I(wt^2))
summary(model2)
hist(I(wt^2))
plot((wt^2),mpg)
cor((wt^2),mpg)
hist(wt)
hist(I(log(wt)))
hist(I(1/wt)))
hist(I(1/wt))
pairs(vars2)
# adding another variable to the model
vars2 = data.frame(mpg,wt, disp)
pairs(vars2)
hist(disp)
plot(disp,mpg)
hist(I(disp^-2)
hist(I(disp^-2))
hist(I(disp^-2))
hist(I(disp^2))
hist(log(disp))
hist(I(disp^(1/3)))
hist(I(disp^(1/2)))
plot(I(disp^(1/2)),mpg)
plot(I(disp^(1/3)),mpg)
plot(I(disp^(2)),mpg)
plot(I(disp^(-1)),mpg)
cor(disp^-1,mpg)
hist(disp^-1,mpg)
hist(disp^-1)
#disp
plot(I(disp^(-1)),mpg)
hist(disp^-1)
model3A = update(model1,~.+disp)
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
model3B = update(model1,~.+I(disp^-1))
summary(model3B)
plot(model3B)
shapiro.test(model3B$residuals)
model3B = update(model1,~.+I(disp^-1/3))
summary(model3B)
plot(model3B)
shapiro.test(model3B$residuals)
model3B = update(model1,~.+I(log(disp)))
summary(model3B)
plot(model3B)
shapiro.test(model3B$residuals)
hist(disp)
plot(disp,mpg)
hist(hp)
plot(hp,mpg)
#disp
plot(hp,mpg)
hist(hp)
model3A = update(model1,~.+hp)
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
hist(1/hp)
hist(hp)
hist(hp^-1)
hist(hp^-1/3)
hist(hp^-1/2)
hist(hp^(-1/2))
hist(hp^(-1))
hist(hp^(-1/2))
hist(hp^(-1/3))
hist(hp^(-1/2))
model3A = update(model1,~.+I(hp^2))
summary(model3A)
plot(model3A)
shapiro.test(model3B$residuals)
shapiro.test(model3A$residuals)
model3A = update(model1,~.+I(hp^1/2))
summary(model3A)
plot(model3A)
shapiro.test(model3B$residuals)
shapiro.test(model3A$residuals)
model3A = update(model1,~.+I(hp^-1/2))
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
hist(hp^(-1))
hist(hp^(-1/2))
model3A = update(model1,~.+I(hp^-1/2))
summary(model3A)
plot(model3A)
shapiro.test(model3B$residuals)
shapiro.test(model3A$residuals)
################ adding another variable to the model ###############
# cor disp = -0.847, wt = -0.867, cyl -0.85
# drat
vars2 = data.frame(mpg,wt,cyl)
pairs(vars2)
hist(cyl)
plot(cyl,mpg)
cor(cyl,mpg)
model3A = update(model1,~.+cyl)
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
hist(cyl)
hist(log(cyl))
hist(I(cyl^-1))
hist(I(cyl^-1/2))
hist(I(cyl^(-1/2)))
hist(I(cyl^(2)))
hist(cyl)
plot(cyl,mpg)
#disp
plot(I(cyl^(-1)),mpg)
#disp
cor(I(cyl^(-1)),mpg)
#disp
cor(I(cyl^(-1/2)),mpg)
#disp
cor(I(cyl^(-1/3)),mpg)
#disp
cor(I(cyl^(-2)),mpg)
#disp
cor(I(cyl^(2)),mpg)
#disp
cor(I(cyl^(3)),mpg)
#disp
plot(I(cyl^(3)),mpg)
#disp
plot(I(cyl^(2)),mpg)
#disp
plot(I(cyl^(-1/2)),mpg)
plot(cyl,mpg)
#disp
plot(I(cyl^(-1),mpg)
#disp
plot(I(cyl^(-1),mpg))
#disp
plot(I(cyl^(-1),mpg))
#disp
plot(I(cyl^(-1)),mpg))
#disp
plot(I(cyl^(-1)),mpg)
cor(cyl,mpg)
pairs(vars2)
stargazer(model3A,type = 'html', out='2 var model')
stargazer(model3B,type = 'html', out='2 var transformed model')
# all variable model
model = lm(mpg~., data = mtcars)
summary(model)
plot(model)
shapiro.test(model$residuals)
plot(model)
stargazer(model,type = 'html', out='2 var transformed model')
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-cyl)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb-cyl)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb-cyl-drat)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb-cyl-drat-disp)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb-cyl-drat-disp-gear)
summary(fullmodel1)
# Do automatic or manual transmission vehicles have better gas mileage?
fullmodel1 = update(model,~.-am-vs-carb-cyl-drat-disp-gear-qsec)
summary(fullmodel1)
summary(fullmodel1)
fullmodel1 = update(fullmodel1,~.+drat)
fullmodel2 = update(fullmodel1,~.+drat)
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.+log(drat))
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.+I(drat^-1))
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.+I(drat^(-1/2))
fullmodel2 = update(fullmodel1,~.+I(drat^(-1/2)))
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.-drat+I(drat^(-1/2)))
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.-drat+I(drat^(-2)))
summary(fullmodel2)
fullmodel2 = update(fullmodel1,~.-drat-I(drat^(-2)))
summary(fullmodel2)
fullmodel3 = update(fullmodel2,~.+cyl)
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+cyl+gear)
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+cyl)
summary(fullmodel3)
shapiro.test(fullmodel3)
shapiro.test(fullmodel3%residuals)
shapiro.test(fullmodel3$residuals)
fullmodel3 = update(fullmodel2,~.-cyl)
summary(fullmodel3)
shapiro.test(fullmodel3$residuals)
fullmodel3 = update(fullmodel2,~.+I(disp^.5)
fullmodel3 = update(fullmodel2,~.+I(disp^.5))
summary(fullmodel3)
shapiro.test(fullmodel3$residuals)
fullmodel3 = update(fullmodel2,~.+I(disp^.5))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+I(disp^-.5))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+I(disp^-.5)-hp+(1/hp))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+I(disp^-.5)-hp+(1/hp))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+I(disp^-.5)+(1/hp))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.+I(disp^-.5)+(hp^-1))
fullmodel3 = update(fullmodel2,~.+I(disp^-.5)+I(hp^-1))
summary(fullmodel3)
fullmodel4 = update(fullmodel3,~.-hp)
summary(fullmodel4)
shapiro.test(fullmodel4$residuals)
shapiro.test(fullmodel3$residuals)
shapiro.test(fullmodel4$residuals)
shapiro.test(fullmodel2$residuals)
fullmodel2 = update(fullmodel1,~.-drat-I(drat^(-2)))
summary(fullmodel2)
pairs(mtcars)
cor(mtcars)
fullmodel3 = update(fullmodel2,~.+I(disp^.5)+I(hp^-1))
summary(fullmodel3)
shapiro.test(fullmodel3$residuals)
fullmodel3 = update(fullmodel2,~.-hp+I(disp^.5)+I(hp^-1))
summary(fullmodel3)
fullmodel3 = update(fullmodel2,~.-hp+I(disp^-.5)+I(hp^-1))
summary(fullmodel3)
shapiro.test(fullmodel3$residuals)
shapiro.test(fullmodel3$residuals)
fullmodel4 = update(fullmodel3,~.-hp)
summary(fullmodel4)
shapiro.test(fullmodel4$residuals)
fullmodel4 = update(fullmodel3,~.-hp-I(disp^-.5))
summary(fullmodel4)
shapiro.test(fullmodel4$residuals)
plot(fullmodel4)
pairs(mtcars)
head(mtcars)
mtcars
wtmodel = lm(mpg ~ wt+hp)
summary(wtmodel)
shapiro.test(wtmodel)
shapiro.test(wtmodel$residuals)
model3A = update(model1,~.+cyl)
summary(model3A)
plot(model3A)
shapiro.test(model3B$residuals)
plot(model2)
vars2 = data.frame(mpg,wt,cyl)
pairs(vars2)
shapiro.test(model1$residuals)
shapiro.test(model2$residuals)
shapiro.test(model3A$residuals)
model3A = update(model1,~.+cyl)
summary(model3A)
plot(model3A)
wtmodel = lm(mpg ~ wt+hp+cyl)
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+cyl)
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+log(disp))
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+(disp^.5))
wtmodel = lm(mpg ~ wt+I(hp^-1)+I(disp^.5))
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+I(disp^-.5))
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+I(disp^-.5)+cyl)
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1)+I(disp^-.5))
summary(wtmodel)
shapiro.test(wtmodel$residuals)
wtmodel = lm(mpg ~ wt+I(hp^-1)-I(disp^-.5)+cyl)
summary(wtmodel)
shapiro.test(wtmodel$residuals)
wtmodel = lm(mpg ~ wt+I(hp^-1)-I(disp^-.5)+cyl+disp)
summary(wtmodel)
wtmodel = lm(mpg ~ wt+I(hp^-1))
summary(wtmodel)
shapiro.test(wtmodel$residuals)
wtmodel2 = lm(mpg~ wt +hp)
shapiro.test(wtmodel$residuals)
summary(wtmodel2)
model3A = update(model1,~.+cyl)
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
# just use wt + cyl because normality works
bestmodel = lm(mpg ~wt+cyl)
summary(bestmodel)
plot(bestmodel)
mtcars
am_factor = as.factor(am)
bestmodel2 = update(bestmodel,~.+am_factor)
summary(bestmodel2)
bestmodel2 = update(bestmodel,~.as.factor(am))
summary(bestmodel2)
bestmodel2 = update(bestmodel,~.+as.factor(am))
summary(bestmodel2)
# just use wt + cyl because normality works
bestmodel = lm(mpg ~wt+cyl)
bestmodel2 = update(bestmodel,~.+am_factor)
summary(bestmodel2)
am_factor
shapiro.test(model1$residuals)
hist(wt)
summary(log(wt))
hist(log(wt))
model1 = lm(log(mpg)~log(wt))
summary(model1)
model1 = lm(mpg~wt)
summary(model1)
model2 = lm(mpg~I(wt^-1))
summary(model2)
shapiro.test(model2$residuals)
plot(model2)
shapiro.test(model2$residuals)
stargazer(model2,type = 'html', out='single var model transform')
stargazer(model2,type = 'html', out='single var model transform')
model2 = lm(mpg~I(wt^-1))
stargazer(model2,type = 'html', out='single var model transform')
stargazer(model2,type = 'html', out='single var model transform')
mtcars
attach(mtcars)
?mtcars
head(mtcars)
pairs(mtcars)
library(stargazer)
cor(mtcars)
model1 = lm(mpg~wt)
summary(model1)
model2 = lm(mpg~I(wt^-1))
summary(model2)
stargazer(model2,type = 'html', out='single var model transform')
stargazer(model2,type = 'html', out='single var transform')
stargazer(model2,type = 'html', out='single var transform',FALSE)
summary(model2)
model2 = lm(mpg~I(wt^-1))
summary(model2)
stargazer(model2,type = 'html', out='single var transform')
plot(I(wt^-1),mpg)
summary(model2)
plot(model2)
model1 = lm(mpg~wt)
summary(model1)
shapiro.test(model2$residuals)
cor(cyl,mpg)
plot(cyl,mpg)
shapiro.test(model3A$residuals)
shapiro.test(model3B$residuals)
summary(model3A)
plot(model3A)
shapiro.test(model3A$residuals)
#disp
plot(I(cyl^(-1)),mpg)
modellogcyl = lm(log(mpg)~log(cyl))
summary(modellogcyl)
modelinvcyl = lm(mpg~I(cyl^-1))
summary(modelinvcyl)
model3B = update(model1,~.+I(cyl^-1))
summary(model3B)
plot(model3B)
shapiro.test(model3B$residuals)
# just use wt + cyl because normality works
bestmodel = lm(mpg ~wt+I(cyl^-1))
summary(bestmodel)
shapiro.test(bestmodel)
shapiro.test(bestmodel$residuals)
# all variable model
model = lm(mpg~., data = mtcars)
summary(model)
plot(model)
shapiro.test(model$residuals)
# just use wt + cyl because normality works
bestmodel = lm(mpg ~wt+I(cyl^-1))
summary(bestmodel)
shapiro.test(bestmodel$residuals)
plot(bestmodel)
shapiro.test(model$residuals)
# equation = 39.6863 + -3.1910(wt) + -1.5078(cyl)
# my car 2007 rav 4 is 39.6863 + -3.1910(3.5) + -1.5078(4) = 22.4866
# my cars expected mpg is 22 mpg so its pretty darn close
am
am_factor = as.factor(am)
am_factor
head(mtcars)
am_factor = as.factor(am)
bestmodel2 = update(bestmodel,~.+am_factor)
summary(bestmodel2)
